https://s3.amazonaws.com/DiscoverMeteor/Discover+Meteor+%E2%80%93+Building+Real-Time+JavaScript+Web+Apps+%E2%80%93+Sacha+Greif+%26+Tom+Coleman.pdf

http://es.discovermeteor.com/pdf


Install  Meteor, nodejs, npm
---------------------------------------------------

fedora : $ curl https://install.meteor.com/ | sh
         $ sudo yum install nodejs npm
         $ sudo -H npm install -g meteorite
 


$ meteor list --using

=========================

$ meteor add jquery
$ meteor add bootstrap
$ mrt add router
$ meteor add force-ssl

$ meteor remove autopublish
$ meteor remove insecure



console.log(Meteor.default_connection._lastSessionId)









proxy issues
-------------------
npm config get proxy
npm config get https-proxy

npm config set proxy http://proxy.ibopeagb.com.mx:3128/
npm config set https-proxy http://proxy.ibopeagb.com.mx:3128/


sudo -H npm --https-proxy=https://proxy.ibopeagb.com.mx:3128 install -g meteorite

npm config set registry http://registry.npmjs.org/
sudo -H npm config set registry http://registry.npmjs.org/





mrt issues
-----------------------------
$ mrt add router
         /usr/bin/env: node: No such file or directory
$ which nodejs
         /usr/bin/nodejs
$ sudo ln -s /usr/bin/nodejs /usr/bin/node
$ mrt add router





git notes
------------------------------
git config color.ui true
git config format.pretty oneline

git remote update, git show-branch *master, git status -uno
git pull

git push -u origin master





mongodb notes
---------------------
 db.users.find({},{"emails":1 });
 db.users.find({},{"_id" : 0 , "emails":1 });
 
 db.users.find({},{_id:1})
 db.users.find({'emails.address':"w@w"})
 db.users.find({'emails.address':"w@w"},{_id:1})
 { emails: { $elemMatch: { address: "foo@foo.com" } } }
 

 db.users.find({'emails.address':"w@w"},{"_id":0,"services":1}); 


db.users.find({},{'services.resume.loginTokens' : 1 }).pretty();
db.users.find({},{'services.resume.loginTokens.hashedToken' : 1 }).pretty();
db.users.find({'emails.address' : "s@s"},{'services.resume.loginTokens.hashedToken' : 1 }).pretty();

 // loginTokens
db.users.find({ $and : [{'emails.address' : "s@s"}]    },{'services.resume.loginTokens.hashedToken' : 1 }).limit(1).pretty();
db.users.find({ $and : [{'emails.address' : "s@s"},{}]  },{'services.resume.loginTokens.hashedToken' : 1 })[0].services.resume.loginTokens;
db.users.find({ $and : [{'emails.address' : "s@s"},{}]  },{'services.resume.loginTokens.hashedToken' : 1 })[0].services.resume.loginTokens[3].hashedToken;
db.users.find({ $and : [{'emails.address' : "s@s"},{}]  },{'services.resume.loginTokens.hashedToken' : 1 })[0].services.resume.loginTokens.length




----"Create DB"------
> use MyNewDB
> show dbs
 
 ----" Cretate collection"------
 db.employees.insert({name : "sajid"});


----" drop DB"------
mongo <dbname> --eval "db.dropDatabase()"
mongo LHA --eval "db.dropDatabase()"


----"show collections"------
show collections
db.getCollectionNames();

----" Remove all documents (rows)"------
db.spares.remove();


db.employees.insert({name : "cesar", manager : [ObjectId("532de1a321419154a0555cc1"),ObjectId("532de6cd21419154a0555cc4")], family : {mother : "ella" , father : "el"}})
db.users.insert({name: ’leto’, email: ’leto@dune.gov’, account: {allowed_gholas: 5, spice_ration: 10}})
db.employees.find({name : "cesar"}).pretty();
db.employees.find({'family.mother' :  "ella"}).pretty()



 ----"utilities"------
http://localhost:28017/

https://github.com/TylerBrock/mongo-hacker
http://genghisapp.com/
  genghisapp 
  genghisapp --kill
  *** yum install rubygem-json_pure jsonrubygem-bson_ext

http://docs.mongodb.org/ecosystem/tools/http-interfaces/





www notes
----------------------------------
http://blog.benmcmahen.com/post/41741539120/building-a-customized-accounts-ui-for-meteor





komodo notes
-----------------------

http://community.activestate.com/xpi/nst-new-source-tree
http://community.activestate.com/xpi/zen-coding
